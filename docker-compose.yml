version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - '${PORT:-3000}:${PORT:-3000}'
    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - DATABASE_URL=${DATABASE_URL}
    volumes:
      - .env:/app/.env
    depends_on:
      - postgres
    restart: unless-stopped
    networks:
      - ecom-network

  postgres:
    image: postgres:16-alpine
    ports:
      - '${DB_PORT:-5432}:5432'
    environment:
      - POSTGRES_PASSWORD=${DB_PASSWORD:-123456}
      - POSTGRES_USER=${DB_USER:-postgres}
      - POSTGRES_DB=${DB_NAME:-postgres}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - ecom-network
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${DB_USER:-postgres}']
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  ecom-network:
    driver: bridge

volumes:
  postgres-data:
